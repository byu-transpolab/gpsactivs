% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbscan-te.R
\name{dbscan_te}
\alias{dbscan_te}
\title{Determine stop locations in trajectory data via DBSCAN-TE}
\usage{
dbscan_te(trajectory, eps = 25, minpts = 4, delta_t = 300, entr_t = 1.75)
}
\arguments{
\item{trajectory}{A simple features collection of points representing a
single trajectory (i.e. person, day). MUST have a `dttm` column called
"timestamp" representing the time of GPS point.}

\item{eps}{distance threshold for defining clusters. Should be provided
in the same units as the trajectory projection (usually meters). DBSCAN input.}

\item{minpts}{minimum number of points in a cluster. DBSCAN input.}

\item{delta_t}{time threshold (seconds): a gap of this length within a
spatial cluster will split the cluster into two potential activities.
An activity must also be at least this long.}

\item{entr_t}{entropy threshold: the entropy of a cluster is a function of
the chaotic movement between points in a cluster. Clusters with higher
entropy are more likely to be activities; this parameter will exclude
potential activities below this threshold}
}
\value{
A simple features collection of points with the start and end
  time of each activity, the estimated cluster entropy (for debugging / calibrating)
}
\description{
Determine stop locations in trajectory data via DBSCAN-TE
}
\details{
Implements the method described in Gong, L.,
  Yamamoto, T., &#38; Morikawa, T. (2018). Identification of activity stop
  locations in GPS trajectories by DBSCAN-TE method combined with support
  vector machines. Transportation Research Procedia, 32,
  146â€“154. \url{https://doi.org/10.1016/J.TRPRO.2018.10.028}

  Note: the SVM is not (yet) implemented. The entropy calculation and
  heuristics seem to get us almost all the way there.
}
\examples{



}
